#
# Pipeline with detect and channel selector
#
# All attributes defined herein are namespaced by alsatplg to
# "pipeline-detect.attribute_name"
#
# Usage: this component can be used by declaring in the top-level topology conf file as follows:
#
# 	Object.pipeline-detect."N" {
#		format		"s16le"
#		period		1000
#		time_domain	"timer"
#		channels	2
#		rate		16000
#	}
#
# Where N is a unique integer for pipeline ID
#
<include/components/buffer.conf>
<include/components/selector.conf>
<include/components/pipeline.conf>
<include/common/pipe_endpoint.conf>
<include/common/source.conf>
<include/common/sink.conf>
<include/components/virtual_widget.conf>

#
# (source) buffer.N.1 -> selector.N.0 ->  buffer.N.0 -> detect.N.playback (sink)
#
Class.Pipeline."pipeline-detect" {

	DefineArgument."pipeline_id" {
		type "integer"
	}

	<include/pipelines/pipeline-common.conf>

	DefineAttribute."stream_name" {}
	DefineAttribute."detect_sink_name" {}

	# Class type for the detect component.
	DefineAttribute."detect_object_class" {}
	DefineAttribute."detect_config" {}
	DefineAttribute."detect_model" {}

	attributes {
		mandatory [
			"channels"
			"format"
			"rate"
			"period"
			"direction"
			"time_domain"
			"stream_name"
		]
		immutable [
			"direction"
		]
	}

	Object.pipeline."0" {
		core			0
		frames			0
		priority		1
		mips			100000
	}

	Object.virtual_widget."0" {
		name		"DetectSink"
		widget_type	"out_drv"
	}

	# Pipeline objects
	Object.detect."0" {
		index	0

		# trapping PRE/POST_PMU/PMD events
		event_flags	15
		# 1 for DAPM event for detect component
		event_type	1

		# byte control for Detect config
		Object.bytes."0" {
			name	"detect_config"
			index	0
			max	304
			bytes_data_name	"dummy_detect_config"

			access [
				tlv_write
				tlv_read
				tlv_callback
			]
		}

		# byte control for Detect model
		Object.bytes."1" {
			name	"detect_model"
			index	1
			max	300000
			bytes_data_name	"dummy_detect_model"

			access [
				tlv_write
				tlv_read
				tlv_callback
			]
		}
	}

	Object.buffer."0" {
		index		0
		periods	2
		caps		"comp"
	}

	Object.selector."0" {
		index	0

		# byte control for selector
		Object.bytes."0" {
			name	"selector"
			index	0
			max	304

			access [
				tlv_write
				tlv_read
				tlv_callback
			]

			Object.data."selector" {
				name	"selector"
				bytes "0x53,0x4f,0x46,0x00,0x00,0x00,0x00,0x00,
					0x0c,0x00,0x00,0x00,0x00,0x10,0x00,0x03,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00"
			}
		}
	}

	Object.buffer."1" {
		index		1
		periods	2
		caps		"comp"
	}

	# Endpoint definitions
	Object.pipe_endpoint."0" {
		index	0
		Object.source."0" {
			class		"buffer"
			index		1
		}
	}

	# Endpoint definitions
	Object.pipe_endpoint."1" {
		index	1
		Object.sink."0" {
			class	"virtual_widget"
			name	"DetectSink"
		}
	}

	# Pipeline connections
	Object.connection."0" {
		type	"graph"
		index	0
		Object.sink."0" {
			class		"selector"
			index		0
		}
		Object.source."0" {
			class		"buffer"
			index		1
		}
	}

	Object.connection."1" {
		type	"graph"
		index	1
		Object.source."0" {
			class		"selector"
			index		0
		}
		Object.sink."0" {
			class		"buffer"
			index		0
		}
	}

	Object.connection."2" {
		type	"graph"
		index	2
		Object.sink."0" {
			class		"detect"
			index		0
		}
		Object.source."0" {
			class		"buffer"
			index		0
		}
	}

	Object.connection."3" {
		type	"graph"
		index	3
		Object.source."0" {
			class		"detect"
			index		0
		}
		Object.sink."0" {
			class		"virtual_widget"
			name		"DetectSink"
		}
	}

	direction	"capture"
	time_domain	"timer"
}
