#
# Capture pipeline with KPB and Volume
#
# A simple pipeline. All attributes defined herein are namespaced by alsatplg to
# "pipeline-volume-playback.attribute_name"
#
# Usage: this component can be used by declaring in the top-level topology conf file as follows:
#
# 	Object.pipeline-kpb-vol-capture."N.M" {
#		pcm_name	"DMIC0"
#		format		"s24le"
#		period		1000
#		time_domain	"timer"
#		channels	2
#		rate		16000
#	}
#
# Where N and M are unique integers for pipeline ID and PCM ID in the parent object.
#
<include/components/volume.conf>
<include/components/buffer.conf>
<include/components/host.conf>
<include/common/pipe_endpoint.conf>
<include/common/source.conf>
<include/common/sink.conf>
<include/components/kpb.conf>
<include/components/pipeline.conf>
<include/common/pcm.conf>
<include/common/pcm_caps.conf>

#
# Simple pipeline
#
# (sink) host.N.playback <- buffer.N.0 <- kpb.N.0 <- buffer.N.1 <- volume.N.0 <- buffer.N.2 (source endpoint)
#					      |
#					      ---> (KPB Sink endpoint)
#
Class.Pipeline."pipeline-kpb-vol-capture" {

	DefineArgument."pipeline_id" {
		type "integer"
	}

	DefineArgument."pcm_id" {
		type "integer"
	}

	<include/pipelines/pipeline-common.conf>

	DefineAttribute."volume_mixer_name" {}

	attributes {
		mandatory [
			"channels"
			"format"
			"rate"
			"direction"
			"period"
			"time_domain"
			"pcm_name"
			"volume_ctl_name"
		]
		immutable [
			"direction"
		]
	}

	Object.pipeline."0" {
		core			0
		frames			0
		priority		0
		mips			5000
	}

	# Pipeline objects
	Object.host."0" {
		period_sink_count	0
		period_source_count	2
		widget_type		"aif_out"
	}

	Object.buffer."0" {
		index		0
		periods	2
		caps		"host"
	}

	Object.kpb."0" {
		index	0

		# byte control for KPB
		Object.bytes."0" {
			name	"kpb"
			index	0
			max	304

			access [
				tlv_write
				tlv_read
				tlv_callback
			]

			Object.data."kpb" {
				name	"kpb"
				bytes "0x53,0x4f,0x46,0x00,0x00,0x00,0x00,0x00,
					0x18,0x00,0x00,0x00,0x00,0x10,0x00,0x03,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x80,0x3e,0x00,0x00,0x10,0x00,0x00,0x00"
			}
		}
	}

	Object.buffer."1" {
		index		1
		periods	2
		caps		"host"
	}


	Object.pga."0" {
		index			0
		ramp_step_type		"linear"
		ramp_step_ms		250
		period_source_count	3
	}

	Object.buffer."2" {
		index		2
		periods	3
		caps		"dai"
	}

	# PCM
	Object.pcm."0" {
		capture_compatible_d0i3	"true"
	}

	# PCM Capabilities
	Object.pcm_caps."0" {
		periods_mins		2
		periods_max		160
		period_size_max	256000
		buffer_size_min	256000
		buffer_size_max	1280000
	}

	# Endpoint definitions
	Object.pipe_endpoint."0" {
		index	0
		Object.source."0" {
			class		"buffer"
			index		2
		}
	}

	# host endpoint to connect the virtual_widget in detect pipeline
	Object.pipe_endpoint."1" {
		index	1
		Object.source."0" {
			class		"host"
			direction	"capture"
		}
	}

	Object.pipe_endpoint."2" {
		index	2
		Object.sink."0" {
			class		"kpb"
			index		0
		}
	}

	# Pipeline connections
	Object.connection."0" {
		type	"graph"
		index	0
		Object.sink."0" {
			class		"host"
			direction	"capture"
		}
		Object.source."0" {
			class		"buffer"
			index		0
		}
	}

	Object.connection."1" {
		type	"graph"
		index	1
		Object.sink."0" {
			class		"buffer"
			index		0
		}
		Object.source."0" {
			class		"kpb"
			index		0
		}
	}

	Object.connection."2" {
		type	"graph"
		index	2
		Object.sink."0" {
			class		"kpb"
			index		0
		}
		Object.source."0" {
			class		"buffer"
			index		1
		}
	}

	Object.connection."3" {
		type	"graph"
		index	3
		Object.sink."0" {
			class		"buffer"
			index		1
		}
		Object.source."0" {
			class		"pga"
			index		0
		}
	}

	Object.connection."4" {
		type	"graph"
		index	4
		Object.source."0" {
			class		"buffer"
			index		2
		}
		Object.sink."0" {
			class		"pga"
			index		0
		}
	}

	direction 	"capture"
	time_domain	"timer"
}
