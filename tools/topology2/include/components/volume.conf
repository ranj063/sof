#
# Common pipeline volume
#
# A generic volume component. All attributes defined herein are namespaced
# by alsatplg to "pga.attribute_name"
#
# Usage: this component can be used by declaring in the "widgets" field of
# a parent object. i.e.
#
# 	Object.pga."N" {
#		pipeline_id	1
#		index		0
#		period_source_count	"2"
#		period_sink_count	"2"
#	}
#
# Where N is the unique instance number for pga widget in the same alsaconf node.
<include/common/tokens.conf>
<include/controls/mixer.conf>

Class.Component."pga" {
	#
	# The PGA widget name would be constructed using the pipeline_id and index arguments.
	# For ex: "pga.1.1" or "pga.10.2" etc.
	#
	DefineArgument."pipeline_id" {
		type "integer"
	}

	#
	# Unique index per widget type in pipeline.
	#
	DefineArgument."index" {
		type "integer"
	}

	#include common component definition
	<include/components/component.conf>

	DefineAttribute.uuid {
		# Token set reference name and type
		token_ref	"sof_tkn_comp.uuid"
	}

	#
	# Bespoke attributes for PGA
	#

	# Volume ramp step type
	DefineAttribute.ramp_step_type {
		# Token set reference name
		token_ref	"sof_tkn_volume.word"
		constraints {
			value_ref	"sof_tkn_volume_ramp_type"
			values [
				"linear"
				"log"
				"linear_zc"
				"log_zc"
			]
		}
	}

	# Volume ramp step in milliseconds
	DefineAttribute.ramp_step_ms {
		# Token set reference name
		token_ref	"sof_tkn_volume.word"
	}

	# Volume widgets can have a volume control and a switch control.
	# These are used to set the control names. These are the names that are visible to
	# userspace via alsamixer.
	DefineAttribute.volume_mixer_name {}
	DefineAttribute.switch_mixer_name {}

	# Attribute categories
	attributes {
		mandatory [
			"no_pm"
			"uuid"
			"widget_type"
		]
		immutable [
			"uuid"
			"widget_type"
		]
		deprecated [
			"preload_count"
		]
	}

	Object.mixer."0" {
		index	0
		#Channel register and shift for Front Left/Right
		Object.channel."0" {
			name	"fl"
			shift	0
		}
		Object.channel."1" {
			name	"fr"
		}

		Object.tlv."0" {
			name	"vtlv_m64s2"
			Object.scale."0" {
				name	"m64s2"
				mute	1
			}
		}

		Object.ops."0" {
			name	"ctl"
			info 	"volsw"
			#256 binds the mixer control to volume get/put handlers
			get 	256
			put 	256
		}
	}

	Object.mixer."1" {
		index	1
		Object.channel."0" {
			name	"flw"
			reg	2
			shift	0
		}
		Object.channel."1" {
			name	"fl"
			reg	2
			shift	1
		}
		Object.channel."2" {
			name	"fr"
			reg	2
			shift	2
		}
		Object.channel."3" {
			name	"frw"
			reg	2
			shift	2
		}

		Object.ops."0" {
			mame	"ctl"
			info "volsw"
			#259 binds the mixer control to switch get/put handlers
			get "259"
			put "259"
		}

		#max 1 indicates switch type control
		max "1"
		invert "false"
	}

	# Set default attribute values for Volume
	widget_type 		"pga"
	uuid 			"7e:67:7e:b7:f4:5f:88:41:af:14:fb:a8:bd:bf:86:82"
	no_pm			"true"
	period_sink_count	2
	period_source_count	2
}
