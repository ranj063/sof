<include/common/vendor-token.conf>
<include/common/tokens.conf>
<include/components/volume.conf>
<include/components/host.conf>
<include/components/buffer.conf>
<include/components/muxdemux.conf>
<include/components/pipeline.conf>
<include/controls/mixer.conf>
<include/controls/bytes.conf>
<include/pipelines/volume-playback.conf>
<include/pipelines/volume-demux-playback.conf>
<include/pipelines/volume-capture.conf>
<include/pipelines/passthrough-capture.conf>
<include/pipelines/eq-iir-volume-capture.conf>
<include/components/dai.conf>
<include/components/eqiir.conf>
<include/components/virtual.conf>
<include/common/data.conf>
<include/common/pcm.conf>
<include/common/pcm_caps.conf>
<include/common/fe_dai.conf>
<include/dais/ssp.conf>
<include/dais/alh.conf>
<include/dais/hda.conf>
<include/dais/hw_config.conf>
<include/dais/dmic.conf>
<include/dais/pdm_config.conf>
<include/common/manifest.conf>
<include/common/pcm.conf>
<include/common/fe_dai.conf>
<include/common/pcm_caps.conf>
<include/common/route.conf>
<include/components/eqiir_highpass_40hz_0db_48khz.conf>
<include/components/eqiir_highpass_40hz_0db_48khz.conf>
Object.Dai {
	HDA.0 {
		name 'Analog Playback and Capture'
		id 4
		index 0
		default_hw_conf_id 4
		Object.Base.hw_config.HDA0 [
		]
		Object.Widget.dai.0 {
			direction playback
			index 1
			type dai_in
			stream_name 'Analog Playback and Capture'
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		Object.Widget.dai.1 {
			direction capture
			index 2
			type dai_out
			stream_name 'Analog Playback and Capture'
			dai_index 1
			period_sink_count 2
			period_source_count 0
			format s32le
		}
		direction duplex
	}
	HDA.1 {
		name 'Digital Playback and Capture'
		id 5
		index 0
		default_hw_conf_id 5
		Object.Base.hw_config.HDA1 [
		]
		Object.Widget.dai.0 {
			direction playback
			index 3
			type dai_in
			stream_name 'Digital Playback and Capture'
			dai_index 2
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		Object.Widget.dai.1 {
			direction capture
			index 4
			type dai_out
			stream_name 'Digital Playback and Capture'
			dai_index 3
			period_sink_count 2
			period_source_count 0
			format s32le
		}
		direction duplex
	}
	HDA.4 {
		name iDisp1
		id 1
		index 0
		default_hw_conf_id 1
		Object.Base.hw_config.HDA4 [
		]
		Object.Widget.dai.0 {
			index 7
			type dai_in
			stream_name iDisp1
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		direction playback
	}
	HDA.5 {
		name iDisp2
		id 2
		index 0
		default_hw_conf_id 2
		Object.Base.hw_config.HDA5 [
		]
		Object.Widget.dai.0 {
			index 8
			type dai_in
			stream_name iDisp2
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		direction playback
	}
	HDA.6 {
		name iDisp3
		id 3
		index 0
		default_hw_conf_id 3
		Object.Base.hw_config.HDA6 [
		]
		Object.Widget.dai.0 {
			index 9
			type dai_in
			stream_name iDisp3
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		direction playback
	}
}
Object.Pipeline {
	volume-playback.1 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.0.playback'
		}
		Object.Widget.host.playback {
			stream_name 'Passthrough Playback 0'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '1 Master Playback Volume'
			}
		}
		format s24le
	}
	volume-playback.3 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.2.playback'
		}
		Object.Widget.host.playback {
			stream_name 'Passthrough Playback 1'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '3 Master Playback Volume'
			}
		}
		format s24le
	}
	volume-playback.7 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.4.playback'
		}
		Object.Widget.host.playback {
			stream_name 'Passthrough Playback 3'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '7 Master Playback Volume'
			}
		}
		format s24le
	}
	volume-playback.8 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.5.playback'
		}
		Object.Widget.host.playback {
			stream_name 'Passthrough Playback 4'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '8 Master Playback Volume'
			}
		}
		format s24le
	}
	volume-playback.9 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.6.playback'
		}
		Object.Widget.host.playback {
			stream_name 'Passthrough Playback 5'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '9 Master Playback Volume'
			}
		}
		format s24le
	}
	eq-iir-volume-capture.2 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.1.capture'
		}
		Object.Widget.host.capture {
			stream_name 'Highpass Capture 0'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '2 Master Capture Volume'
			}
		}
		Object.Widget.eqiir.1 {
			Object.Control.bytes.1 {
				name eqiir_bytes_2
				Object.Base.data.eqiir_highpass_40hz_0db_48khz [
				]
			}
		}
		format s24le
	}
	eq-iir-volume-capture.4 {
		dynamic_pipeline @DYNAMIC_PIPELINE@
		Object.Widget.pipeline.1 {
			stream_name 'dai.HDA.3.capture'
		}
		Object.Widget.host.capture {
			stream_name 'Highpass Capture 1'
		}
		Object.Widget.pga.1 {
			Object.Control.mixer.1 {
				name '4 Master Capture Volume'
			}
		}
		Object.Widget.eqiir.1 {
			Object.Control.bytes.1 {
				name eqiir_bytes_4
				Object.Base.data.eqiir_highpass_40hz_0db_48khz [
				]
			}
		}
		format s24le
	}
}
Object.PCM {
	pcm.0 {
		name 'HDA Analog'
		Object.Base.fe_dai.'HDA Analog' [
		]
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 0'
			formats 'S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Highpass Capture 0'
			formats 'S24_LE,S16_LE'
		}
		direction duplex
	}
	pcm.1 {
		name 'HDA Digital'
		Object.Base.fe_dai.'HDA Digital' [
		]
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 1'
			formats 'S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Highpass Capture 1'
			formats 'S24_LE,S16_LE'
		}
		direction duplex
	}
	pcm.3 {
		name HDMI1
		Object.Base.fe_dai.HDMI1 [
		]
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 3'
			formats 'S24_LE,S16_LE'
		}
		direction playback
	}
	pcm.4 {
		name HDMI2
		Object.Base.fe_dai.HDMI2 [
		]
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 4'
			formats 'S24_LE,S16_LE'
		}
		direction playback
	}
	pcm.5 {
		name HDMI3
		Object.Base.fe_dai.HDMI3 [
		]
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 5'
			formats 'S24_LE,S16_LE'
		}
		direction playback
	}
}
Object.Base.route.1 {
	source 'buffer.1.2'
	sink 'dai.HDA.0.playback'
}
Object.Base.route.2 {
	source 'dai.HDA.1.capture'
	sink 'buffer.2.3'
}
Object.Base.route.3 {
	source 'buffer.3.2'
	sink 'dai.HDA.2.playback'
}
Object.Base.route.4 {
	source 'dai.HDA.3.capture'
	sink 'buffer.4.3'
}
Object.Base.route.5 {
	source 'buffer.7.2'
	sink 'dai.HDA.4.playback'
}
Object.Base.route.6 {
	source 'buffer.8.2'
	sink 'dai.HDA.5.playback'
}
Object.Base.route.7 {
	source 'buffer.9.2'
	sink 'dai.HDA.6.playback'
}
Object.Widget.virtual {
	codec0_in {
		type input
		index 1
	}
	codec1_in {
		type input
		index 2
	}
	codec0_out {
		type output
		index 3
	}
	codec1_out {
		type output
		index 4
	}
	codec2_in {
		type input
		index 5
	}
	codec2_out {
		type output
		index 6
	}
	iDisp1_out {
		type output
		index 7
	}
	iDisp2_out {
		type output
		index 8
	}
	iDisp3_out {
		type output
		index 9
	}
	'iDisp3 Tx' {
		type out_drv
		index 0
	}
	'iDisp2 Tx' {
		type out_drv
		index 1
	}
	'iDisp1 Tx' {
		type out_drv
		index 2
	}
	'Analog CPU Playback' {
		type out_drv
		index 3
	}
	'Digital CPU Playback' {
		type out_drv
		index 4
	}
	'Alt Analog CPU Playback' {
		type out_drv
		index 5
	}
	'Analog CPU Capture' {
		type input
		index 6
	}
	'Digital CPU Capture' {
		type input
		index 7
	}
	'Alt Analog CPU Capture' {
		type input
		index 8
	}
}
